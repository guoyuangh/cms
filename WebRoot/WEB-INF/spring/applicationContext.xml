<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jee="http://www.springframework.org/schema/jee"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:security="http://www.springframework.org/schema/security"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">	
	<!-- Root Context: defines shared resources visible to all other web components -->
	   
	<!-- 数据源配置 -->   
    <!-- 方式2：c3p0连接池数据源 -->
     <context:property-placeholder location="classpath:db.properties" /> 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
        <property name="driverClass" value="${db.driver.class}" />  
        <property name="jdbcUrl" value="${db.url}" />  
        <property name="user" value="${db.username}" />  
        <property name="password" value="${db.password}" />  
        <property name="initialPoolSize" value="5" />  
        <property name="minPoolSize" value="5" />  
        <property name="maxPoolSize" value="20" />  
        <property name="maxStatements" value="100" />  
        <property name="maxIdleTime" value="3600" />  
        <property name="acquireIncrement" value="2" />  
        <property name="acquireRetryAttempts" value="10" />  
        <property name="acquireRetryDelay" value="600" />  
        <property name="testConnectionOnCheckin" value="true" />  
        <property name="idleConnectionTestPeriod" value="1200" />  
        <property name="checkoutTimeout" value="10000" />  
    </bean> 

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- enable component scanning (beware that this does not enable mapper scanning!)
   		  自动扫描指定的包下面的通过注解标识的组件，无需使用xml来定义spring的bean了
     -->    
    <context:component-scan base-package="cn._2vin.**.service" />
    
    <!-- enable autowire 开启bean类的注解支持 （让 @Autowired等注解工作起来 ）-->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations 开启通过注解标识事务功能 -->

    <!-- Mybatis工厂类配置 define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" autowire="byName">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="cn._2vin" />
        <property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
    </bean>

    <!-- 扫描Mybatis的Mapper组件 scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn._2vin.**.persistence" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
        <property name="config">  
            <bean class="com.google.code.kaptcha.util.Config">  
                <constructor-arg>  
                    <props>  
                        <prop key="kaptcha.border">yes</prop>  
                        <prop key="kaptcha.border.color">105,179,90</prop>  
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.noise.color">blue</prop>
                        <prop key="kaptcha.image.width">100</prop> 
                        <prop key="kaptcha.image.height">40</prop>
                        <prop key="kaptcha.textproducer.impl">com.google.code.kaptcha.text.impl.DefaultTextCreator</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.WaterRipple</prop>
                        <prop key="kaptcha.textproducer.font.size">32</prop>  
                        <prop key="kaptcha.textproducer.char.length">4</prop>  
                    </props>  
                </constructor-arg>  
            </bean>  
        </property>  
    </bean>
</beans>
